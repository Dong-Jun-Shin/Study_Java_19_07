class SolutionTest {
	public int[] solution(int[][] v) {
		int[] answer = new int[2];
		
		int compareNum = 0;

		// answer[0] = X좌표
		//같은 배열인덱스를 비교하는게 아니면서 같은 값을 가진 좌표를 compareNum에 담기
		for (int j = 0; j < v.length; j++) {
			for (int i = 1; i < v.length; i++) {
				if (v[j][0] == v[i][0] && i != j) {
					compareNum = v[j][0];
					j++;
				}
			}
		}

		//같을 값을 가진 좌표 이외의 값을 answer[0]에 대입
		for (int i = 0; i < v.length; i++) {
			if (compareNum != v[i][0]) {
				answer[0] = v[i][0];
			}
		}
		
		// answer[1] = Y좌표
		for (int j = 0; j < v.length; j++) {
			for (int i = 1; i < v.length; i++) {

				if (v[j][1] == v[i][1] && i != j) {
					compareNum = v[j][1];
					j++;
				}
			}
		}
		for (int i = 0; i < v.length; i++) {
			if (compareNum != v[i][1]) {
				answer[1] = v[i][1];
			}
		}

		System.out.println(answer[0] + ", " + answer[1]);

		return answer;
	}
}

public class Solution {
	public static void main(String[] args) {
		int[][] v1 = { { 1, 4 }, { 3, 4 }, { 3, 10 } };
		int[][] v2 = { { 1, 1 }, { 2, 2 }, { 1, 2 } };
		SolutionTest a = new SolutionTest();

		a.solution(v1);
		a.solution(v2);

	}
}

//1. [1, 10]
//2. [2, 1]